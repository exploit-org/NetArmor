package org.exploit.armor.mitigation.intrusion.collector;

import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.ChannelInboundHandlerAdapter;
import io.netty.handler.codec.http2.Http2SettingsFrame;
import org.exploit.armor.mitigation.intrusion.model.IntrusionDetectionData;

public class Http2FingerprintCollector extends ChannelInboundHandlerAdapter {
    private final IntrusionDetectionData collector;

    public Http2FingerprintCollector(IntrusionDetectionData collector) {
        this.collector = collector;
    }

    @Override
    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {
        if (!(msg instanceof Http2SettingsFrame frame)) {
            super.channelRead(ctx, msg);
            return;
        }

        var settings = frame.settings();
        collector.setSettings(settings);

        super.channelRead(ctx, msg);
    }
}
