package org.exploit.armor.test;

import org.exploit.armor.NetArmor;
import org.exploit.armor.config.CommonSecurityConfig;
import org.exploit.armor.exception.ValidationException;
import org.exploit.armor.model.CommonConfig;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class ValidationTest {
    private NetArmor armor;

    @BeforeEach
    public void init() {
        var config = new CommonConfig();
        config.setBaseDirectory("/home/user/MyApp/safe");

        armor = NetArmor.create(new CommonSecurityConfig(config));
    }

    @Test
    public void assertInputValidated() {
        assertDoesNotThrow(() -> armor.validator()
                .input()
                .validate("email", "contact@exploit.org"));

        assertThrows(ValidationException.class, () -> armor.validator().input().
                validate("email", "not@mail"));
    }

    @Test
    public void assertXssMitigated() {
        var xss = "<script>alert('XSS')</script>";
        var encoded = armor.htmlEncoder().encode(xss);

        assertEquals("&lt;script&gt;alert('XSS')&lt;/script&gt;", encoded);
    }

    @Test
    public void assertPathValidated() {
        var malicious = "/../../etc/passwd";
        assertThrows(ValidationException.class, () -> armor.validator().path()
                .validate(malicious));

        var safe = "/home/user/MyApp/safe/file.txt";
        assertDoesNotThrow(() -> armor.validator().path()
                .validate(safe));
    }
}
